PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS `Users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `username` VARCHAR(255) NOT NULL UNIQUE, `salt` VARCHAR(255) NOT NULL, `pwHash` VARCHAR(255) NOT NULL, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
CREATE TABLE IF NOT EXISTS `AuthTokens` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `value` VARCHAR(255) NOT NULL UNIQUE, `loggedInAt` DATETIME, `userId` INTEGER REFERENCES `Users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
CREATE TABLE IF NOT EXISTS `Games` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `name` VARCHAR(255) NOT NULL, `ownerId` INTEGER REFERENCES `Users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
CREATE TABLE IF NOT EXISTS `Rooms` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `code` VARCHAR(255), `gameId` INTEGER REFERENCES `Games` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `winner` INTEGER REFERENCES `Users` (`id`), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
CREATE TABLE IF NOT EXISTS `Questions` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `question` VARCHAR(255) NOT NULL, `hint` VARCHAR(255), `index` INTEGER, `gameId` INTEGER REFERENCES `Games` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
CREATE TABLE IF NOT EXISTS `Answers` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `answer` VARCHAR(255) NOT NULL, `index` INTEGER, `correct` TINYINT(1), `questionId` INTEGER REFERENCES `Questions` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL);
CREATE TABLE IF NOT EXISTS `UserSessions` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `userId` INTEGER REFERENCES `Users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `roomId` INTEGER REFERENCES `Rooms` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, UNIQUE (`userId`, `roomId`));
COMMIT;
